generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Player {
  id    String @id @default(auto()) @map("_id") @db.ObjectId
  name  String
  score Int    @default(0)

  FortuneTeam FortuneTeam?  @relation(fields: [fortuneId], references: [id])
  fortuneId   String?       @db.ObjectId
  FeudTeam    FeudTeam?     @relation(fields: [feudTeamId], references: [id])
  feudTeamId  String?       @db.ObjectId
  PlayerGuess PlayerGuess[]
}

model FortuneTeam {
  id      String   @id @default(auto()) @map("_id") @db.ObjectId
  players Player[]
  score   Int      @default(0)
  team    String
}

model FeudTeam {
  id      String   @id @default(auto()) @map("_id") @db.ObjectId
  players Player[]
  score   Int      @default(0)
  team    String
}

model FortuneRound {
  id       String  @id @default(auto()) @map("_id") @db.ObjectId
  question String
  answer   String
  price    Int     @default(0)
  winner   String?
}

model PlayerGuess {
  id    String   @id @default(auto()) @map("_id") @db.ObjectId
  guess String[]
  score Int      @default(0)

  FeudBonusRound   FeudBonusRound? @relation(fields: [feudBonusRoundId], references: [id])
  feudBonusRoundId String?         @db.ObjectId
  player           Player?         @relation(fields: [playerId], references: [id])
  playerId         String?         @db.ObjectId
}

model FeudBonusRound {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  questions String[]
  answers   String[]
  price     Int      @default(0)
  doubled   Boolean  @default(false)

  playerGuesses PlayerGuess[]
}

model FeudRound {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  question  String
  answer    String[]
  answerPts Int[]
  price     Int      @default(0)
  winner    String?
}
